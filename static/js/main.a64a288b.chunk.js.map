{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","className","style","backgroundColor","defaultProps","Header","onAdd","title","showAdd","prototypes","PropTypes","string","isRequired","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a64a288b.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ text, color, onClick}) => {\r\n   return ( <button \r\n    onClick={onClick}\r\n    className=\"btn\" \r\n    style={ { backgroundColor: color } }>\r\n    { text }\r\n    </button> );\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steeleblue',\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ onAdd, title, showAdd }) => {\r\n\r\n  return (\r\n    <div>\r\n      <header className='header'>\r\n        <h1>{ title }</h1>\r\n        <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n}\r\n\r\nHeader.prototypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div className={`task ${task.reminder ? 'reminder' : 'task'}`} onDoubleClick={() => onToggle(task.id)}>\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete (task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task\r\n","import Task from './Task'\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({onAdd}) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text || !day) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Day & Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Day & Time\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctors Appointment\",\n      day: \"Feb 5th at 2:30pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Meeting at School\",\n      day: \"Feb 6th at 1:30pm\",\n      reminder: false,\n    },\n    {\n      id: 3,\n      text: \"Food Shopping\",\n      day: \"Feb 28th at 8:30am\",\n      reminder: true,\n    },\n  ])\n\n// Add Task\nconst addTask = (task) => {\n const id = Math.floor(Math.random() * 10000) + 1\n\n const newTask = { id, ...task }\n setTasks([ ...tasks, newTask ])\n}\n\n// Delete Task\nconst deleteTask = (id) => {\n  setTasks (tasks.filter((task) => task.id !== id))\n}\n\n// Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks (tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder } : task))\n}\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      { showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'No task available to show'}\n    </div>\n  )\n}\n\nexport default App\n// 1:12:46","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}